bag
bag?
bag<?
bag<=?
bag=?
bag>?
bag>=?
bag->list
bag->set
bag-add!
bag-any?
bag-copy
bag-count
bag-decrement!
bag-delete!
bag-difference
bag-difference!
bag-element-count
bag-empty-copy
bag-every?
bag-filter
bag-find
bag-fold
bag-fold-unique
bag-for-each
bag-for-each-unique
bag-increment!
bag-intersection
bag-intersection!
bag-map
bag-member?
bag-partition
bag-remove
bag-size
bag-unfold
bag-union
bag-union!
enum-set
enum-set
enum-set?
enum-set<?
enum-set<=?
enum-set=?
enum-set>?
enum-set>=?
enum-set->list
enum-set-add!
enum-set-any?
enum-set-complement
enum-set-complement!
enum-set-copy
enum-set-count
enum-set-delete!
enum-set-delete-max!
enum-set-delete-min!
enum-set-difference
enum-set-difference!
enum-set-empty-copy
enum-set-every?
enum-set-filter
enum-set-find
enum-set-find
enum-set-fold
enum-set-for-each
enum-set-intersection
enum-set-intersection!
enum-set-map
enum-set-max
enum-set-member?
enum-set-min
enum-set-partition
enum-set-projection
enum-set-remove
enum-set-size
enum-set-unfold
enum-set-union
enum-set-union!
enum-set-xor
enum-set-xor!
enum-type?
enum-type->alist
enum-type-symbol
enum-type-symbol-value
enum-value<?
enum-value<=?
enum-value=?
enum-value>?
enum-value>=?
integer-set
integer-set?
integer-set<?
integer-set<=?
integer-set=?
integer-set>?
integer-set>=?
integer-set->list
integer-set-add!
integer-set-any?
integer-set-complement
integer-set-complement!
integer-set-copy
integer-set-count
integer-set-delete!
integer-set-delete-max!
integer-set-delete-min!
integer-set-difference
integer-set-difference!
integer-set-empty-copy
integer-set-every?
integer-set-filter
integer-set-find
integer-set-fold
integer-set-for-each
integer-set-intersection
integer-set-intersection!
integer-set-map
integer-set-max
integer-set-member?
integer-set-min
integer-set-partition
integer-set-remove
integer-set-size
integer-set-unfold
integer-set-union
integer-set-union!
integer-set-xor
integer-set-xor!
list->bag
list->enum-set
list->integer-set
list->set
make-bag
make-enum-set
make-enum-type
make-integer-set
make-set
make-universal-enum-set
make-universal-integer-set
set
set?
set<?
set<=?
set=?
set>?
set>=?
set->bag
set->list
set-add!
set-any?
set-copy
set-count
set-delete!
set-difference
set-difference!
set-empty-copy
set-every?
set-filter
set-find
set-fold
set-for-each
set-intersection
set-intersection!
set-map
set-member?
set-partition
set-remove
set-size
set-unfold
set-union
set-union!
set-value
set-xor
set-xor!
